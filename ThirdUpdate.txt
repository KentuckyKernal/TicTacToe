[[[[[[[[[[[[[[HTML SLIM]]]]]]]]]]]]]]]]]]]

h1 Very simple jQuery Tic Tac Toe
div.messages
div.turn
div.line1
div.line2
div.line3
div.line4
div.line5
div.line6
div.line7
div.line8

table
  tr
    td.item1
    td.item2
    td.item3
  tr
    td.item4
    td.item5
    td.item6
  tr
    td.item7
    td.item8
    td.item9

br
input.reset type="button" value="Reset"
br
br
h2 Current Game Stats
br
div.arraydisplay
div.score1

[[[[[[[[[[[[[[[[[[[CSS]]]]]]]]]]]]]]]]]]]]]

body {
  font-family:"Roboto", Arial, sans-serif;
  margin:0 auto;
  text-align:center;
  margin-top:50px;
  color:#FFF;
  text-shadow:-1px -1px #333;
  background:#333;
  h1 {
    font-weight:normal;
  }
  .turn {
    margin-bottom:10px;
  }
  table {
    border-collapse:collapse;
    width:150px;
    margin:0 auto;
    td {
      width:50px;
      height:50px;
      border:1px solid #555;
      cursor:pointer;
      &:before {
        font-size:1.5em;
        line-height:1;
      }
      &.cross:before {
        content:"x";
        color:lightblue;
      }
      &.circle:before {
        content:"o";
        color:pink;
      }
    }
  }
  .reset {
    background:#555;
    border:1px solid #333;
    padding:5px 10px;
    color:#FFF;
    cursor:pointer;
    font-family:"Roboto", Arial, sans-serif;
    text-transform:uppercase;
    &:hover {
      opacity:0.8;
    }
  }
  .line1{
width: 112px;
height: 47px;
border-bottom: 2px solid white;
position: absolute;
     left:905px;
     top:120px;
  }
  
  .line2{
width: 112px;
height: 47px;
border-bottom: 2px solid white;
transform: rotate(90deg);
position: absolute;
     left:877px;
     top:195px;
  }
   .line3{
width: 150px;
height: 47px;
border-bottom: 2px solid white;
transform: rotate(45deg);
position: absolute;
     left:905px;
     top:180px;
  }
  .line4{
width: 112px;
height: 47px;
border-bottom: 2px solid white;
position: absolute;
     left:905px;
     top:170px;
  }
  .line5{
width: 112px;
height: 47px;
border-bottom: 2px solid white;
position: absolute;
     left:905px;
     top:225px;
  }
  .line6{
width: 112px;
height: 47px;
border-bottom: 2px solid white;
transform: rotate(90deg);
position: absolute;
     left:927px;
     top:195px;
  }
  .line7{
width: 112px;
height: 47px;
border-bottom: 2px solid white;
transform: rotate(90deg);
position: absolute;
     left:977px;
     top:195px;
  }
  .line8{
width: 150px;
height: 47px;
border-bottom: 2px solid white;
transform: rotate(-47deg);
position: absolute;
     left:869px;
     top:180px;
  }
}

[[[[[[[[[[[[[[[[[[[JS]]]]]]]]]]]]]]]]]]]]]

var arr = [];
var score = 0;
var score2 = 0;



$( ".line1" ).hide();
$( ".line2" ).hide();
$( ".line3" ).hide();
$( ".line4" ).hide();
$( ".line5" ).hide();
$( ".line6" ).hide();
$( ".line7" ).hide();
$( ".line8" ).hide();
  
$(function() {
  var startTime = Date.now();
  var player = 2;
  var table = $('table');
  var messages = $('.messages');
  var turn = $('.turn');
  displayNextPlayer(turn, player);
  
  
  //---------------------------
  
  $('td').click(function() {
    //time 
var endTime = Date.now();
    var difference = endTime - startTime;
    arr.push(difference);
    let x = arr.filter((element, index) => {
  			return index % 2 === 0;
				})
    var sum = x.reduce(add, 0)/x.length;

        function add(a, b) {
            return a + b;
        }
    var arraydisplay = $('.arraydisplay');
    arraydisplay.html('Average move time: '+ parseFloat((sum/1000)).toFixed(2) + ' seconds.');
    //clickCount
    score +=1;
    var score1 = $( ".score1" );
    score1.html('Total clicks: '+score)
    
    
    td = $(this);
    var state = getState(td);
    if(!state) {
      var pattern = definePatternForCurrentPlayer(player);
      changeState(td, pattern);
      if(checkIfPlayerWon(table, pattern)) {
        messages.html('Player '+player+' has won.');
        turn.html('');
      } else {
        player = setNextPlayer(player);
        displayNextPlayer(turn, player);
      }
    } else {
      messages.html('This box is already checked.');
    }
  });
  
  //---------------------------
  
  $('.reset').click(function() {
    player = 2;
    messages.html('');
    reset(table);
    displayNextPlayer(turn, player);
    reset1();
  });

  function reset1() {
    arr =[];
    startTime = Date.now();
    score = 0;
    score2 = 0;
}
  
  
});

//---------------------------

function getState(td) {
  if(td.hasClass('cross') || td.hasClass('circle')) {
    return 1;
  } else {
    return 0;
  }
}

//---------------------------

function changeState(td, pattern) {
  return td.addClass(pattern);
}

//---------------------------

function definePatternForCurrentPlayer(player) {
  if(player == 2) {
    return 'cross';
  } else {
    return 'circle';
  }
}

//---------------------------

function setNextPlayer(player) {
  if(player == 2) {
    return player = 1;
  } else {
    return player = 2;
  }
}

//---------------------------

function displayNextPlayer(turn, player) {
  turn.html('Player turn : '+player);
}

//--------------------//

function checkIfPlayerWon(table, pattern) {
  var won = 0;
  if(table.find('.item1').hasClass(pattern) && table.find('.item2').hasClass(pattern) && table.find('.item3').hasClass(pattern)) {
    $( ".line1" ).fadeIn("slow");
    won = 1;
  } else if (table.find('.item1').hasClass(pattern) && table.find('.item4').hasClass(pattern) && table.find('.item7').hasClass(pattern)) {
    $( ".line2" ).fadeIn("slow");
    won = 1;
  } else if (table.find('.item1').hasClass(pattern) && table.find('.item5').hasClass(pattern) && table.find('.item9').hasClass(pattern)) {
    $( ".line3" ).fadeIn("slow");
    won = 1;
  } else if (table.find('.item4').hasClass(pattern) && table.find('.item5').hasClass(pattern) && table.find('.item6').hasClass(pattern)) {
    $( ".line4" ).fadeIn("slow");
    won = 1;
  } else if (table.find('.item7').hasClass(pattern) && table.find('.item8').hasClass(pattern) && table.find('.item9').hasClass(pattern)) {
    $( ".line5" ).fadeIn("slow");
    won = 1;
  } else if (table.find('.item2').hasClass(pattern) && table.find('.item5').hasClass(pattern) && table.find('.item8').hasClass(pattern)) {
    $( ".line6" ).fadeIn("slow");
    won = 1;
  } else if (table.find('.item3').hasClass(pattern) && table.find('.item6').hasClass(pattern) && table.find('.item9').hasClass(pattern)) {
    $( ".line7" ).fadeIn("slow");
    won = 1;
  } else if (table.find('.item3').hasClass(pattern) && table.find('.item5').hasClass(pattern) && table.find('.item7').hasClass(pattern)) {
    $( ".line8" ).fadeIn("slow")
    won = 1;
  }
  return won;
}

//--------------------------------------//

function reset(table) {
  table.find('td').each(function() {
    $(this).removeClass('circle').removeClass('cross');
    $( ".line1" ).hide();
    $( ".line2" ).hide();
    $( ".line3" ).hide();
    $( ".line4" ).hide();
    $( ".line5" ).hide();
    $( ".line6" ).hide();
    $( ".line7" ).hide();
    $( ".line8" ).hide();
  });
}
